.\" Copyright (C) Tom Bjorkholm & Markus Kuhn, 1996
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\" 1996-04-01 Tom Bjorkholm <tomb@mydata.se>
.\"            First version written
.\" 1996-04-10 Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"            revision
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SCHED_RR_GET_INTERVAL 2 "18 mars 2013" Linux "Manuel du programmeur Linux"
.SH NOM
sched_rr_get_interval \- Obtenir l'intervalle SCHED_RR pour le processus
indiqué
.SH SYNOPSIS
\fB#include <sched.h>\fP
.sp
\fBint sched_rr_get_interval(pid_t \fP\fIpid\fP\fB, struct timespec * \fP\fItp\fP\fB);\fP
.SH DESCRIPTION
\fBsched_rr_get_interval\fP() remplit la structure \fItimespec\fP pointée par
\fItp\fP avec le «\ round robin time quantum\ » du processus identifié par
\fIpid\fP. Ce processus devrait fonctionner avec la politique d'ordonnancement
\fBSCHED_RR\fP.

La structure \fItimespec\fP est déclarée comme suit\ :

.in +4n
.nf
struct timespec {
    time_t tv_sec;    /* secondes     */
    long   tv_nsec;   /* nanosecondes */
};
.fi
.in

.\" FIXME . On Linux, sched_rr_get_interval()
.\" returns the timeslice for SCHED_OTHER processes -- this timeslice
.\" is influenced by the nice value.
.\" For SCHED_FIFO processes, this always returns 0.
.\"
.\" The round-robin time quantum value is not alterable under Linux
.\" 1.3.81.
.\"
Si l'identifiant du processus \fIpid\fP est égal à zéro, le quantum de temps
pour le processus appelant est écrit dans \fI*tp\fP.
.SH "VALEUR RENVOYÉE"
\fBsched_rr_get_interval\fP() renvoie 0 s'il réussit. En cas d'échec, \-1 est
renvoyé, et \fIerrno\fP contient le code d'erreur.
.SH ERREURS
.TP 
\fBEFAULT\fP
Problème lors de la copie d'information vers l'espace utilisateur.
.TP 
\fBEINVAL\fP
PID invalide.
.TP 
\fBENOSYS\fP
L'appel système n'a pas encore été implémenté (seulement pour les noyaux
relativement anciens).
.TP 
\fBESRCH\fP
Impossible de trouver un processus avec l'identifiant \fIpid\fP.
.SH CONFORMITÉ
POSIX.1\-2001.
.SH NOTES
Les systèmes POSIX sur lesquels \fBsched_rr_get_interval\fP() est disponible
définissent \fB_POSIX_PRIORITY_SCHEDULING\fP dans \fI<unistd.h>\fP.
.SS "Notes sur Linux"
.\" commit a4ec24b48ddef1e93f7578be53270f0b95ad666c
POSIX n'indique aucun mécanisme pour contrôler la taille du «\ round robin
time quantum\ ». Cependant, Linux fournit une méthode (non portable) pour
cela. Le quantum peut être contrôlé en ajustant la valeur de «\ politesse\ »
du processus (consultez \fBsetpriority\fP(2)). Assigner une valeur de politesse
négative (c'est\-à\-dire haute) résulte en un quantum de temps plus long\ ;
assigner une valeur de politesse positive (c'est\-à\-dire basse) résulte en un
quantum de temps plus court. Le quantum de temps par défaut est de
0,1\ secondes\ ; l'influence du changement de valeur de politesse sur le
quantum a varié suivant les versions du noyau. Cette méthode d'ajustement du
quantum a été supprimée à partir de la version 2.6.24 de Linux.

.\" commit ce0dbbbb30aee6a835511d5be446462388ba9eee
.\" .SH BUGS
.\" As of Linux 1.3.81
.\" .BR sched_rr_get_interval ()
.\" returns with error
.\" ENOSYS, because SCHED_RR has not yet been fully implemented and tested
.\" properly.
Linux 3.9 a introduit un mécanisme d'ajustement (et d'observation) du
quantum de \fBSCHED_RR\fP\ : le fichier
\fI/proc/sys/kernel/sched_rr_timeslice_ms\fP contient la valeur du quantum
exprimée en millisecondes, qui par défaut vaut 100. Écrire 0 dans ce fichier
a pour effet de réinitialiser le quantum à sa valeur par défaut.
.SH "VOIR AUSSI"
\fBsched_setscheduler\fP(2) décrit les politiques d'ordonnancement sous Linux.
.PP
\fIProgramming for the real world \- POSIX.4\fP de Bill O. Gallmeister, O'Reilly
& Associates, Inc., ISBN 1\-56592\-074\-0.
.SH COLOPHON
Cette page fait partie de la publication 3.52 du projet \fIman\-pages\fP
Linux. Une description du projet et des instructions pour signaler des
anomalies peuvent être trouvées à l'adresse
\%http://www.kernel.org/doc/man\-pages/.
.SH TRADUCTION
Depuis 2010, cette traduction est maintenue à l'aide de l'outil
po4a <http://po4a.alioth.debian.org/> par l'équipe de
traduction francophone au sein du projet perkamon
<http://perkamon.alioth.debian.org/>.
.PP
Christophe Blaess <http://www.blaess.fr/christophe/> (1996-2003),
Alain Portal <http://manpagesfr.free.fr/> (2003-2006).
Julien Cristau et l'équipe francophone de traduction de Debian\ (2006-2009).
.PP
Veuillez signaler toute erreur de traduction en écrivant à
<perkamon\-fr@traduc.org>.
.PP
Vous pouvez toujours avoir accès à la version anglaise de ce document en
utilisant la commande
«\ \fBLC_ALL=C\ man\fR \fI<section>\fR\ \fI<page_de_man>\fR\ ».
