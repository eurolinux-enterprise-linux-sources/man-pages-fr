.\" Copyright (C) 2004 Andries Brouwer (aeb@cwi.nl)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SET_TID_ADDRESS 2 "10 septembre 2004" Linux "Manuel du programmeur Linux"
.SH NOM
set_tid_address \- Positionner un pointeur vers un identifiant de thread
(TID)
.SH SYNOPSIS
.nf
\fB#include <linux/unistd.h>\fP
.sp
\fBlong set_tid_address(int *\fP\fItidptr\fP\fB);\fP
.fi
.SH DESCRIPTION
Le noyau conserve, pour chaque processus, deux valeurs nommées
\fIset_child_tid\fP et \fIclear_child_tid\fP qui sont nulles par défaut.
.SS set_child_tid
Si un processus est démarré en utilisant \fBclone\fP(2) avec l'attribut
\fBCLONE_CHILD_SETTID\fP, \fIset_child_tid\fP est remplie avec \fIchild_tidptr\fP, le
cinquième paramètre de cet appel système.
.LP
Lorsque \fIset_child_tid\fP est remplie, la toute première chose que le nouveau
processus fait est d'écrire son PID à cette adresse.
.SS clear_child_tid
Si un processus est démarré en utilisant \fBclone\fP(2) avec l'attribut
\fBCLONE_CHILD_CLEARTID\fP, \fIclear_child_tid\fP est remplie avec
\fIchild_tidptr\fP, le cinquième paramètre de cet appel système.
.LP
L'appel système \fBset_tid_address\fP() remplit la valeur \fIclear_child_tid\fP
pour le processus appelant à \fItidptr\fP.
.LP
Lorsque \fIclear_child_tid\fP est remplie, que le processus finit et qu'il
avait de la mémoire partagée avec d'autres processus ou threads, 0 est écrit
à cette adresse et un appel à \fIfutex(child_tidptr, FUTEX_WAKE, 1, NULL,
NULL, 0);\fP est réalisé (c'est\-à\-dire que l'un des processus bloqués sur ce
futex est réveillé). Les erreurs sont ignorées.
.SH "VALEUR RENVOYÉE"
\fBset_tid_address\fP() renvoie toujours le PID du processus appelant.
.SH ERREURS
\fBset_tid_address\fP() réussit toujours.
.SH VERSIONS
Cet appel est présent depuis Linux 2.5.48. Les détails fournis ici sont
valides depuis Linux 2.5.49.
.SH CONFORMITÉ
Cet appel système est spécifique à Linux.
.SH "VOIR AUSSI"
\fBclone\fP(2), \fBfutex\fP(2)
.SH COLOPHON
Cette page fait partie de la publication 3.23 du projet \fIman\-pages\fP
Linux. Une description du projet et des instructions pour signaler des
anomalies peuvent être trouvées à l'adresse
<URL:http://www.kernel.org/doc/man\-pages/>.
.SH TRADUCTION
Depuis 2010, cette traduction est maintenue à l'aide de l'outil
po4a <URL:http://po4a.alioth.debian.org/> par l'équipe de
traduction francophone au sein du projet perkamon
<URL:http://alioth.debian.org/projects/perkamon/>.
.PP
Alain Portal <URL:http://manpagesfr.free.fr/>\ (2004-2006).
Julien Cristau et l'équipe francophone de traduction de Debian\ (2006-2009).
.PP
Veuillez signaler toute erreur de traduction en écrivant à
<perkamon\-l10n\-fr@lists.alioth.debian.org>.
.PP
Vous pouvez toujours avoir accès à la version anglaise de ce document en
utilisant la commande
«\ \fBLC_ALL=C\ man\fR \fI<section>\fR\ \fI<page_de_man>\fR\ ».
