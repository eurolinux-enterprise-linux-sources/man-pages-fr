.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" %%%LICENSE_START(BSD_4_CLAUSE_UCB)
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\"     @(#)ferror.3	6.8 (Berkeley) 6/29/91
.\"
.\"
.\" Converted for Linux, Mon Nov 29 14:24:40 1993, faith@cs.unc.edu
.\" Added remark on EBADF for fileno, aeb, 2001-03-22
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH FERROR 3 "21 juin 2013" "" "Manuel du programmeur Linux"
.SH NOM
clearerr, feof, ferror, fileno \- Vérifier et réinitialiser l'état d'un flux
.SH SYNOPSIS
\fB#include <stdio.h>\fP
.sp
\fBvoid clearerr(FILE *\fP\fIstream\fP\fB);\fP

\fBint feof(FILE *\fP\fIstream\fP\fB);\fP

\fBint ferror(FILE *\fP\fIstream\fP\fB);\fP

\fBint fileno(FILE *\fP\fIstream\fP\fB);\fP
.sp
.in -4n
Exigences de macros de test de fonctionnalités pour la glibc (consultez
\fBfeature_test_macros\fP(7))\ :
.in
.sp
\fBfileno\fP()\ : _POSIX_C_SOURCE\ >=\ 1 || _XOPEN_SOURCE || _POSIX_SOURCE
.SH DESCRIPTION
La fonction \fBclearerr\fP() efface la fin de fichier et les indicateurs
d'erreurs du flux pointé par \fIstream\fP.
.PP
La fonction \fBfeof\fP() teste l'indicateur de fin de fichier du flux pointé
par \fIstream\fP et, renvoie une valeur non nulle si cet indicateur est
actif. L'indicateur de fin de fichier ne peut être réinitialisé que par la
fonction \fBclearerr\fP().
.PP
La fonction \fBferror\fP() teste l'indicateur d'erreur du flux pointé par
\fIstream\fP, et renvoie une valeur non nulle si cet indicateur est
actif. L'indicateur d'erreur ne peut être réinitialisé que par la fonction
\fBclearerr\fP().
.PP
La fonction \fBfileno\fP() examine l'argument \fIstream\fP et renvoie le
descripteur de fichier, de type entier.
.PP
Pour des versions de ces fonctions ignorant les verrouillages, voir
\fBunlocked_stdio\fP(3).
.SH ERREURS
Ces fonctions ne devraient pas échouer, et ne pas définir la variable
\fIerrno\fP. (Toutefois, si \fBfileno\fP() détecte que son argument n'est pas un
flux valide, il doit renvoyer \-1 et définir \fIerrno\fP avec \fBEBADF\fP).
.SH ATTRIBUTS
.SS "Multithreading (voir pthreads(7))"
Les fonctions \fBclearerr\fP(), \fBfeof\fP(), \fBferror\fP() et \fBfileno\fP() sont
sûres dans un contexte multithread.
.SH CONFORMITÉ
Les fonctions \fBclearerr\fP(), \fBfeof\fP(), et \fBferror\fP() sont conformes à C89
et C99.
.SH "VOIR AUSSI"
\fBopen\fP(2), \fBfdopen\fP(3), \fBstdio\fP(3), \fBunlocked_stdio\fP(3)
.SH COLOPHON
Cette page fait partie de la publication 3.52 du projet \fIman\-pages\fP
Linux. Une description du projet et des instructions pour signaler des
anomalies peuvent être trouvées à l'adresse
\%http://www.kernel.org/doc/man\-pages/.
.SH TRADUCTION
Depuis 2010, cette traduction est maintenue à l'aide de l'outil
po4a <http://po4a.alioth.debian.org/> par l'équipe de
traduction francophone au sein du projet perkamon
<http://perkamon.alioth.debian.org/>.
.PP
Christophe Blaess <http://www.blaess.fr/christophe/> (1996-2003),
Alain Portal <http://manpagesfr.free.fr/> (2003-2006).
Florentin Duneau et l'équipe francophone de traduction de Debian\ (2006-2009).
.PP
Veuillez signaler toute erreur de traduction en écrivant à
<perkamon\-fr@traduc.org>.
.PP
Vous pouvez toujours avoir accès à la version anglaise de ce document en
utilisant la commande
«\ \fBLC_ALL=C\ man\fR \fI<section>\fR\ \fI<page_de_man>\fR\ ».
