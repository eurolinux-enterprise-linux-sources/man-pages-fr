.\" Copyright (C) 2002 Andries Brouwer <aeb@cwi.nl>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" This replaces an earlier man page written by Walter Harms
.\" <walter.harms@informatik.uni-oldenburg.de>.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH ASSERT_PERROR 3 "25 août 2002" GNU "Manuel du programmeur Linux"
.SH NOM
assert_perror \- Vérifier un code d'erreur et arrêter le programme
.SH SYNOPSIS
.nf
\fB#define _GNU_SOURCE\fP         /* Consultez feature_test_macros(7) */
\fB#include <assert.h>\fP
.sp
\fBvoid assert_perror(int \fP\fIerrnum\fP\fB);\fP
.fi
.SH DESCRIPTION
Si la macro \fBNDEBUG\fP est définie lors de la dernière inclusion de
\fI<assert.h>\fP, la macro \fBassert_perror\fP() ne génère aucun code et
n'a donc aucun effet. Sinon, la macro \fBassert_perror\fP() affiche un message
d'erreur sur la sortie d'erreur et termine le programme en appelant
\fBabort\fP(3) si \fIerrnum\fP est non nul. Le message contient le nom du fichier,
le nom de la fonction et le numéro de ligne de l'appel de la macro, ainsi
que le résultat de \fIstrerror(errnum)\fP.
.SH "VALEUR RENVOYÉE"
Aucune valeur n'est renvoyée.
.SH CONFORMITÉ
Il s'agit d'une extension GNU.
.SH BOGUES
Le but des macros d'assertion est d'aider le programmeur à trouver les
bogues dans son application, bogues résultant d'erreur de
programmation. Cependant, avec les fonctions ou les appels système, la
situation est différente et un retour en erreur peut (et va) survenir et
doit donc être testé. N'utilisez pas une assertion dont le test
disparaîtrait quand \fBNDEBUG\fP est définie, mais écrivez un gestionnaire
d'erreur correct. N'utilisez jamais cette macro.
.SH "VOIR AUSSI"
\fBabort\fP(3), \fBassert\fP(3), \fBexit\fP(3), \fBstrerror\fP(3)
.SH COLOPHON
Cette page fait partie de la publication 3.52 du projet \fIman\-pages\fP
Linux. Une description du projet et des instructions pour signaler des
anomalies peuvent être trouvées à l'adresse
\%http://www.kernel.org/doc/man\-pages/.
.SH TRADUCTION
Depuis 2010, cette traduction est maintenue à l'aide de l'outil
po4a <http://po4a.alioth.debian.org/> par l'équipe de
traduction francophone au sein du projet perkamon
<http://perkamon.alioth.debian.org/>.
.PP
Thierry Vignaud (2002),
Alain Portal <http://manpagesfr.free.fr/>\ (2006).
Florentin Duneau et l'équipe francophone de traduction de Debian\ (2006-2009).
.PP
Veuillez signaler toute erreur de traduction en écrivant à
<perkamon\-fr@traduc.org>.
.PP
Vous pouvez toujours avoir accès à la version anglaise de ce document en
utilisant la commande
«\ \fBLC_ALL=C\ man\fR \fI<section>\fR\ \fI<page_de_man>\fR\ ».
