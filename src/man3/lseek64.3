.\" Copyright 2004 Andries Brouwer <aeb@cwi.nl>.
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH LSEEK64 3 "11 décembre 2004" Linux "Manuel du programmeur Linux"
.SH NOM
lseek64 \- Positionner la tête de lecture/écriture dans un fichier (version
64\ bits)
.SH SYNOPSIS
\fB#define _LARGEFILE64_SOURCE\fP /* Consultez feature_test_macros(7) */
.br
\fB#include <sys/types.h>\fP
.br
\fB#include <unistd.h>\fP
.sp
\fBoff64_t lseek64(int \fP\fIfd\fP\fB, off64_t \fP\fIoffset\fP\fB, int \fP\fIwhence\fP\fB);\fP
.SH DESCRIPTION
Les fonctions de la famille \fBlseek\fP(2) repositionnent la tête de lecture
d'un fichier ouvert associé au descripteur de fichier \fIfd\fP à \fIoffset\fP
octets relativement au début du fichier, à la position actuelle et à la fin
du fichier lorsque \fIwhence\fP a respectivement la valeur \fBSEEK_SET\fP,
\fBSEEK_CUR\fP ou \fBSEEK_END\fP.
.LP
Pour plus de détails sur les valeurs renvoyées et les erreurs, consultez
\fBlseek\fP(2).
.PP
Quatre interfaces sont disponibles\ : \fBlseek\fP(2), \fBlseek64\fP(),
\fBllseek\fP(2) et l'appel système brut \fB_llseek\fP(2).
.SS lseek
Prototype\ :
.nf
.sp
.in +4n
\fBoff_t lseek(int \fP\fIfd\fP\fB, off_t \fP\fIoffset\fP\fB, int \fP\fIwhence\fP\fB);\fP
.in
.fi
.sp
\fBlseek\fP(2) utilise le type \fIoff_t\fP. C'est un type signé sur 32\ bits pour
les architectures 32\ bits, à moins que l'on compile avec
.nf
.sp
.in +4n
#define _FILE_OFFSET_BITS 64
.in
.sp
.fi
auquel cas c'est un type 64\ bits signé.
.SS lseek64
Prototype\ :
.nf
.sp
.in +4n
\fBoff64_t lseek64(int \fP\fIfd\fP\fB, off64_t \fP\fIoffset\fP\fB, int \fP\fIwhence\fP\fB);\fP
.in
.fi
.sp
La routine de bibliothèque \fBlseek64\fP() utilise un type sur 64\ bits même si
\fIoff_t\fP est un type 32\ bits. Son prototype (et le type \fIoff64_t\fP) n'est
disponible que lorsqu'on compile avec
.nf
.sp
.in +4n
#define _LARGEFILE64_SOURCE
.in
.sp
.fi
.\" in glibc 2.0.94, not in 2.0.6
La fonction \fBlseek64\fP() est disponible depuis la glibc\ 2.1, et elle est
définie comme un alias de \fBllseek\fP().
.SS llseek
Prototype\ :
.nf
.sp
.in +4n
\fBloff_t llseek(int \fP\fIfd\fP\fB, loff_t \fP\fIoffset\fP\fB, int \fP\fIwhence\fP\fB);\fP
.in
.fi
.sp
.\" in libc 5.0.9, not in 4.7.6
Le type \fIloff_t\fP est un type 64\ bits signé. La routine de bibliothèque
\fBllseek\fP est disponible dans la libc5 et dans la glibc, mais sans
définition particulière. Son prototype était donné dans
\fI<unistd.h>\fP pour la libc5, mais la glibc ne propose pas de
prototype. Ceci n'est pas bon puisqu'un prototype est nécessaire. Les
utilisateurs devraient ajouter le prototype ci\-dessus, ou quelque chose
d'équivalent dans leurs sources. Lorsque des utilisateurs se plaignaient à
propos de données perdues à cause d'une mauvaise compilation de
\fBe2fsck\fP(8), la glibc\ 2.1.3 a ajouté un avertissement au moment de
l'édition de liens\ :
.sp
.in +4n
"la fonction «\ llseek\ » peut être dangereuse\ ; utilisez «\ lseek64\ » à la
place."
.in
.sp
Cela fait que cette fonction est inutilisable si l'on souhaite une
compilation vierge de tout avertissement.
.SS _llseek
Toutes les fonctions ci\-dessus sont implémentées avec cet appel système. Le
prototype est le suivant\ :
.nf
.sp
.in +4n
\fBint _llseek(int \fP\fIfd\fP\fB, off_t \fP\fIoffset_hi\fP\fB, off_t \fP\fIoffset_lo\fP\fB,\fP
\fB            loff_t *\fP\fIresult\fP\fB, int \fP\fIwhence\fP\fB);\fP
.in
.fi
.sp
Pour plus de détails, consultez \fBllseek\fP(2).
.SH "VOIR AUSSI"
\fBllseek\fP(2), \fBlseek\fP(2)
.SH COLOPHON
Cette page fait partie de la publication 3.52 du projet \fIman\-pages\fP
Linux. Une description du projet et des instructions pour signaler des
anomalies peuvent être trouvées à l'adresse
\%http://www.kernel.org/doc/man\-pages/.
.SH TRADUCTION
Depuis 2010, cette traduction est maintenue à l'aide de l'outil
po4a <http://po4a.alioth.debian.org/> par l'équipe de
traduction francophone au sein du projet perkamon
<http://perkamon.alioth.debian.org/>.
.PP
Christophe Blaess <http://www.blaess.fr/christophe/> (1996-2003),
Alain Portal <http://manpagesfr.free.fr/> (2003-2006).
Florentin Duneau et l'équipe francophone de traduction de Debian\ (2006-2009).
.PP
Veuillez signaler toute erreur de traduction en écrivant à
<perkamon\-fr@traduc.org>.
.PP
Vous pouvez toujours avoir accès à la version anglaise de ce document en
utilisant la commande
«\ \fBLC_ALL=C\ man\fR \fI<section>\fR\ \fI<page_de_man>\fR\ ».
