.\" Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"	<mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH GETNETENT_R 3 "10 septembre 2010" GNU "Manuel du programmeur Linux"
.SH NOM
getnetent_r, getnetbyname_r, getnetbyaddr_r  \- Lire les informations réseau
(versions réentrantes)
.SH SYNOPSIS
.nf
\fB#include <netdb.h>\fP
.sp
\fBint getnetent_r(struct netent *\fP\fIresult_buf\fP\fB, char *\fP\fIbuf\fP\fB,\fP
\fB                size_t \fP\fIbuflen\fP\fB, struct netent **\fP\fIresult\fP\fB,\fP
\fB                int *\fP\fIh_errnop\fP\fB);\fP
.sp
\fBint getnetbyname_r(const char *\fP\fIname\fP\fB,\fP
\fB                struct netent *\fP\fIresult_buf\fP\fB, char *\fP\fIbuf\fP\fB,\fP
\fB                size_t \fP\fIbuflen\fP\fB, struct netent **\fP\fIresult\fP\fB,\fP
\fB                int *\fP\fIh_errnop\fP\fB);\fP
.sp
\fBint getnetbyaddr_r(uint32_t \fP\fInet\fP\fB, int \fP\fItype\fP\fB,\fP
\fB                struct netent *\fP\fIresult_buf\fP\fB, char *\fP\fIbuf\fP\fB,\fP
\fB                size_t \fP\fIbuflen\fP\fB, struct netent **\fP\fIresult\fP\fB,\fP
\fB                int *\fP\fIh_errnop\fP\fB);\fP
.sp
.fi
.in -4n
Exigences de macros de test de fonctionnalités pour la glibc (consultez
\fBfeature_test_macros\fP(7))\ :
.ad l
.in
.sp
\fBgetnetent_r\fP(), \fBgetnetbyname_r\fP(), \fBgetnetbyaddr_r\fP()\ :
.RS 4
_BSD_SOURCE || _SVID_SOURCE
.RE
.ad b
.SH DESCRIPTION
Les fonctions \fBgetnetent_r\fP(), \fBgetnetbyname_r\fP(), et \fBgetnetbyaddr_r\fP()
sont respectivement les versions réentrantes, de \fBgetnetent\fP(3),
\fBgetnetbyname\fP(3), et \fBgetnetbyaddr\fP(3). Elles diffèrent dans le sens où
la structure \fInetent\fP est renvoyée dans la signature de l'appel et dans la
valeur de retour.

Au lieu de renvoyé un pointeur sur une structure \fInetent\fP statiquement
allouée, ces fonctions copient la structure à l'adresse pointée par
\fIresult_buf\fP.

.\" I can find no information on the required/recommended buffer size;
.\" the nonreentrant functions use a 1024 byte buffer -- mtk.
Le tableau \fIbuf\fP est utilisé pour sauvegarder les champs de la chaîne
pointés par la structure \fInetent\fP renvoyée (les fonctions non réentrantes
allouent ces chaînes de façon statique). La taille du tableau est spécifiée
avec \fIbuflen\fP. Si \fIbuf\fP est trop petit, l'appel échoue avec l'erreur
\fBERANGE\fP, et l'appelant doit essayer de nouveau avec un tableau plus grand
(un tableau de 1024 octets est en général suffisant).

Si la fonction obtient un enregistrement de réseau, alors \fI*result\fP pointe
vers \fIresult_buf\fP sinon \fI*result\fP est défini à NULL.

.\" getnetent.3 doesn't document any use of h_errno, but nevertheless
.\" the nonreentrant functions no seem to set h_errno.
Le tampon pointé par \fIh_errnop\fP est utilisé pour renvoyé la valeur qui doit
être sauvegardée dans la variable globale \fIh_errno\fP lors de l'utilisation
des versions non réentrantes de ces fonctions.
.SH "VALEUR RENVOYÉE"
En cas de succès, ces fonctions renvoient zéro. En cas d'erreur, une valeur
d'erreur positive listée dans ERREURS est renvoyée.

Dans le cas des erreurs, enregistrement non trouvé (\fBgetnetbyname_r\fP(),
\fBgetnetbyaddr_r\fP()), ou fin de l'entrée (\fBgetnetent_r\fP()), \fIresult\fP est
défini à NULL.
.SH ERREURS
.TP 
\fBENOENT\fP
(\fBgetnetent_r\fP()) Plus d'enregistrement dans la base de données.
.TP 
\fBERANGE\fP
\fIbuf\fP est trop petit. Ré\-essayer avec un tampon plus grand (et augmentez
\fIbuflen\fP).
.SH CONFORMITÉ
Ces fonctions sont des extensions GNU. Des fonctions avec des noms
similaires existent sur d'autres systèmes, bien que en général avec des
signatures d'appels différent.
.SH "VOIR AUSSI"
\fBgetnetent\fP(3), \fBnetworks\fP(5)
.SH COLOPHON
Cette page fait partie de la publication 3.52 du projet \fIman\-pages\fP
Linux. Une description du projet et des instructions pour signaler des
anomalies peuvent être trouvées à l'adresse
\%http://www.kernel.org/doc/man\-pages/.
.SH TRADUCTION
Depuis 2010, cette traduction est maintenue à l'aide de l'outil
po4a <http://po4a.alioth.debian.org/> par l'équipe de
traduction francophone au sein du projet perkamon
<http://perkamon.alioth.debian.org/>.
.PP
Florentin Duneau et l'équipe francophone de traduction de Debian\ (2006-2009).
.PP
Veuillez signaler toute erreur de traduction en écrivant à
<perkamon\-fr@traduc.org>.
.PP
Vous pouvez toujours avoir accès à la version anglaise de ce document en
utilisant la commande
«\ \fBLC_ALL=C\ man\fR \fI<section>\fR\ \fI<page_de_man>\fR\ ».
