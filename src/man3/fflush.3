.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fflush.3	5.4 (Berkeley) 6/29/91
.\"
.\" Converted for Linux, Mon Nov 29 15:22:01 1993, faith@cs.unc.edu
.\"
.\" Modified 2000-07-22 by Nicolás Lichtmaier <nick@debian.org>
.\" Modified 2001-10-16 by John Levon <moz@compsoc.man.ac.uk>
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH FFLUSH 3 "6 septembre 2009" GNU "Manuel du programmeur Linux"
.SH NOM
fflush \- Vider les tampons d'un flux
.SH SYNOPSIS
\fB#include <stdio.h>\fP
.sp
\fBint fflush(FILE *\fP\fIstream\fP\fB);\fP
.SH DESCRIPTION
Pour les flux de sortie, \fBfflush\fP() force l'écriture de toutes les données
se trouvant dans les tampons de l'espace utilisateur, et met à jour le flux
\fIstream\fP à travers la fonction sous\-jacent d'écriture. Pour les flux
d'entrée, \fBfflush\fP() ne traite pas tout donnée en tampon qui aurait été lue
depuis le fichier sous\-jacent mais qui ne l'aurait pas été par
l'application. Le statut d'ouverture du flux n'est pas affecté.
.PP
Si l'argument \fIstream\fP est NULL, \fBfflush\fP() vide \fItous\fP les flux ouverts
en sortie.
.PP
Pour une version de cette fonction ignorant les verrouillages, voir
\fBunlocked_stdio\fP(3).
.SH "VALEUR RENVOYÉE"
Si elle réussit intégralement, cette fonction renvoie 0. Sinon, elle renvoie
\fBEOF\fP, et la variable \fIerrno\fP contient le code d'erreur.
.SH ERREURS
.TP 
\fBEBADF\fP
\fIstream\fP n'est pas ouvert, ou du moins pas en écriture.
.PP
La fonction \fBfflush\fP() peut aussi échouer, et définir dans \fIerrno\fP
n'importe quelles erreurs spécifiées par la routine \fBwrite\fP(2).
.SH CONFORMITÉ
C89, C99, POSIX.1\-2001, POSIX.1\-2008.

.\" Verified on: Solaris 8.
Les standards ne spécifie pas le comportement pour les flux d'entrée. la
plupart des autres implémentations ont le même comportement que
l'implémentation Linux.
.SH NOTES
Remarquez que \fBfflush\fP() ne vide que les tampons fournis par la
bibliothèque C dans l'espace utilisateur. Pour s'assurer que les données
sont écrites physiquement sur le disque, il faut aussi vider les tampons du
noyau à l'aide par exemple de \fBsync\fP(2) ou \fBfsync\fP(2).
.SH "VOIR AUSSI"
\fBfsync\fP(2), \fBsync\fP(2), \fBwrite\fP(2), \fBfclose\fP(3), \fBfopen\fP(3),
\fBsetbuf\fP(3), \fBunlocked_stdio\fP(3)
.SH COLOPHON
Cette page fait partie de la publication 3.23 du projet \fIman\-pages\fP
Linux. Une description du projet et des instructions pour signaler des
anomalies peuvent être trouvées à l'adresse
<URL:http://www.kernel.org/doc/man\-pages/>.
.SH TRADUCTION
Depuis 2010, cette traduction est maintenue à l'aide de l'outil
po4a <URL:http://po4a.alioth.debian.org/> par l'équipe de
traduction francophone au sein du projet perkamon
<URL:http://alioth.debian.org/projects/perkamon/>.
.PP
Christophe Blaess <URL:http://www.blaess.fr/christophe/> (1996-2003),
Alain Portal <URL:http://manpagesfr.free.fr/> (2003-2006).
Florentin Duneau et l'équipe francophone de traduction de Debian\ (2006-2009).
.PP
Veuillez signaler toute erreur de traduction en écrivant à
<perkamon\-l10n\-fr@lists.alioth.debian.org>.
.PP
Vous pouvez toujours avoir accès à la version anglaise de ce document en
utilisant la commande
«\ \fBLC_ALL=C\ man\fR \fI<section>\fR\ \fI<page_de_man>\fR\ ».
