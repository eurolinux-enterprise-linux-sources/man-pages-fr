.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright (c) 2008 Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Modified Mon Apr 12 12:49:57 1993, David Metcalfe
.\" Modified Sat Jul 24 18:56:22 1993, Rik Faith (faith@cs.unc.edu)
.\" Modified Wed Feb 20 21:09:36 2002, Ian Redfern (redferni@logica.com)
.\" 2008-07-09, mtk, add rawmemchr()
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH MEMCHR 3 "23 avril 2012" "" "Manuel du programmeur Linux"
.SH NOM
memchr, memrchr, rawmemchr \- Rechercher un caractère dans une zone mémoire
.SH SYNOPSIS
.nf
\fB#include <string.h>\fP

\fBvoid *memchr(const void *\fP\fIs\fP\fB, int \fP\fIc\fP\fB, size_t \fP\fIn\fP\fB);\fP

\fBvoid *memrchr(const void *\fP\fIs\fP\fB, int \fP\fIc\fP\fB, size_t \fP\fIn\fP\fB);\fP

\fBvoid *rawmemchr(const void *\fP\fIs\fP\fB, int \fP\fIc\fP\fB);\fP
.fi
.sp
.in -4n
Exigences de macros de test de fonctionnalités pour la glibc (consultez
\fBfeature_test_macros\fP(7))\ :
.in
.sp
\fBmemrchr\fP(), \fBrawmemchr\fP()\ : _GNU_SOURCE
.SH DESCRIPTION
La fonction \fBmemchr\fP() examine les \fIn\fP premiers octets de la zone mémoire
pointée par \fIs\fP à la recherche de la première occurrence de \fIc\fP. À la fois
\fIs\fP et les octets de la zone mémoire pointée par \fIs\fP sont interprétés
comme des \fIunsigned char\fP.
.PP
La fonction \fBmemrchr\fP() travaille comme \fBmemchr\fP(), sauf qu'elle recherche
en arrière depuis la fin de la zone de \fIn\fP octets pointée par \fIs\fP plutôt
que depuis le début.

La fonction \fBrawmemchr\fP() est semblable à \fBmemchr\fP()\ : elle suppose
(c'est\-à\-dire que le développeur en est sûr) qu'une occurrence de \fIc\fP se
trouve quelque part dans la zone de mémoire qui commence à l'endroit pointé
par \fIs\fP et fait ainsi une recherche optimisée de \fIc\fP (c'est\-à\-dire sans
utiliser d'argument de comptage pour limiter la longueur de la
recherche). Si aucune occurrence de \fIc\fP n'est trouvée les résultats sont
imprévisibles. L'appel suivant est une manière rapide pour trouver le
caractère nul de fin d'une chaîne\ :
.in +4n
.nf

char *p = rawmemchr(s,\ \(aq\e0\(aq);
.fi
.in
.SH "VALEUR RENVOYÉE"
Les fonctions \fBmemchr\fP() et \fBmemrchr\fP() renvoient un pointeur sur l'octet
correspondant, ou NULL si le caractère n'est pas présent dans la zone de
mémoire concernée.

La fonction \fBrawmemchr\fP() renvoie un pointeur sur l'octet correspondant,
s'il est trouvé. Si aucun caractère correspondant n'est trouvé, le résultat
n'est pas spécifié.
.SH VERSIONS
\fBrawmemchr\fP() a été introduite dans la glibc dans sa version\ 2.1.

\fBmemrchr\fP() a été introduite dans la glibc dans sa version\ 2.2.
.SH CONFORMITÉ
La fonction \fBmemchr\fP() se conforme à SVr4, BSD\ 4.3, C89, C99 et
POSIX.1\-2001.

La fonction \fBmemrchr\fP() est une extension GNU disponible depuis la glibc\ 2.1.91.

La fonction \fBrawmemchr\fP() est une extension GNU disponible depuis la glibc\ 2.1.
.SH "VOIR AUSSI"
\fBffs\fP(3), \fBindex\fP(3), \fBrindex\fP(3), \fBstrchr\fP(3), \fBstrpbrk\fP(3),
\fBstrrchr\fP(3), \fBstrsep\fP(3), \fBstrspn\fP(3), \fBstrstr\fP(3), \fBwmemchr\fP(3)
.SH COLOPHON
Cette page fait partie de la publication 3.52 du projet \fIman\-pages\fP
Linux. Une description du projet et des instructions pour signaler des
anomalies peuvent être trouvées à l'adresse
\%http://www.kernel.org/doc/man\-pages/.
.SH TRADUCTION
Depuis 2010, cette traduction est maintenue à l'aide de l'outil
po4a <http://po4a.alioth.debian.org/> par l'équipe de
traduction francophone au sein du projet perkamon
<http://perkamon.alioth.debian.org/>.
.PP
Christophe Blaess <http://www.blaess.fr/christophe/> (1996-2003),
Alain Portal <http://manpagesfr.free.fr/> (2003-2006).
Florentin Duneau et l'équipe francophone de traduction de Debian\ (2006-2009).
.PP
Veuillez signaler toute erreur de traduction en écrivant à
<perkamon\-fr@traduc.org>.
.PP
Vous pouvez toujours avoir accès à la version anglaise de ce document en
utilisant la commande
«\ \fBLC_ALL=C\ man\fR \fI<section>\fR\ \fI<page_de_man>\fR\ ».
