.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 18:11:47 1993 by Rik Faith (faith@cs.unc.edu)
.\" 2007-06-15, Marc Boyer <marc.boyer@enseeiht.fr> + mtk
.\"     Improve discussion of strncat().
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH STRCAT 3 "19 juillet 2012" GNU "Manuel du programmeur Linux"
.SH NOM
strcat, strncat \- Concaténer deux chaînes
.SH SYNOPSIS
.nf
\fB#include <string.h>\fP
.sp
\fBchar *strcat(char *\fP\fIdest\fP\fB, const char *\fP\fIsrc\fP\fB);\fP
.sp
\fBchar *strncat(char *\fP\fIdest\fP\fB, const char *\fP\fIsrc\fP\fB, size_t \fP\fIn\fP\fB);\fP
.fi
.SH DESCRIPTION
La fonction \fBstrcat\fP() ajoute la chaîne \fIsrc\fP à la fin de la chaîne
\fIdest\fP en écrasant l'octet nul («\ \e0\ ») final à la fin de \fIdest\fP, puis
en ajoutant un nouvel octet nul final. Les chaînes ne doivent pas se
chevaucher, et la chaîne \fIdest\fP doit être assez grande pour accueillir le
résultat. Si \fIdest\fP n'est pas assez grande, le comportement du programme
est imprévisible. \fILes dépassements de tampon font partie des moyens
préférés pour attaquer les programmes sécurisés\fP.
.PP
La fonction \fBstrncat\fP() est similaire, à la différence que\ :
.IP * 3
elle ne prend en compte que les \fIn\fP premiers octets de \fIsrc\fP.
.IP *
\fIsrc\fP n'a pas besoin de se terminer par un caractère nul si elle contient
au moins \fIn\fP\ octets.
.PP
Comme pour \fBstrcat\fP(), la chaîne résultante dans \fIdest\fP est toujours
terminée par un caractère nul.
.PP
Si \fIsrc\fP contient au moins \fIn\fP\ octets, \fBstrncat\fP() écrit \fIn+1\fP\ octets
dans \fIdest\fP (\fIn\fP\ octets de \fIsrc\fP plus le caractère nul final). De ce
fait, \fIdest\fP doit être au moins de taille \fIstrlen(dest)+n+1\fP.

Une implémentation simple de \fBstrncat\fP() pourrait être\ :
.in +4n
.nf

char*
strncat(char *dest, const char *src, size_t n)
{
    size_t dest_len = strlen(dest);
    size_t i;

    for (i = 0 ; i < n && src[i] != \(aq\e0\(aq ; i++)
        dest[dest_len + i] = src[i];
    dest[dest_len + i] = \(aq\e0\(aq;

    return dest;
}
.fi
.in
.SH "VALEUR RENVOYÉE"
Les fonctions \fBstrcat\fP() et \fBstrncat\fP() renvoient un pointeur sur la
chaîne résultat \fIdest\fP.
.SH CONFORMITÉ
SVr4, BSD\ 4.3, C89, C99.
.SH NOTES
Certains systèmes (BSD, Solaris et autres) fournissent la fonction
suivante\ :

    size_t strlcat(char *dest, const char *src, size_t size);

.\" https://lwn.net/Articles/506530/
Cette fonction ajoute la chaîne \fIsrc\fP, terminée par un caractère nul, à la
chaîne \fIdest\fP en copiant au plus \fIsize\-strlen(dest)\-1\fP depuis \fIsrc\fP et
ajoute un caractère nul en fin de chaîne au résultat \fIsauf\fP si \fIsize\fP est
inférieur à \fIstrlen(dest)\fP. Cette fonction corrige le problème de
dépassement de tampon de \fBstrcat\fP(), mais l'appelant doit quand même gérer
la possibilité de pertes de données si \fIsize\fP est trop petit. La fonction
renvoie la longueur de la chaîne que \fBstrlcat\fP() a essayé de créer. Si la
valeur renvoyée est supérieure à \fIsize\fP, c'est qu'il y a eu perte de
données. Si les pertes de données sont problématiques, l'appelant \fIdoit\fP
soit vérifier les arguments avant l'appel, soit tester la valeur de retour
de la fonction. \fBstrlcat\fP() n'existe pas dans glibc et n'est pas normalisé
par POSIX, mais est disponible sous Linux avec la bibliothèque \fIlibbsd\fP.
.SH "VOIR AUSSI"
\fBbcopy\fP(3), \fBmemccpy\fP(3), \fBmemcpy\fP(3), \fBstrcpy\fP(3), \fBstring\fP(3),
\fBstrncpy\fP(3), \fBwcscat\fP(3), \fBwcsncat\fP(3)
.SH COLOPHON
Cette page fait partie de la publication 3.52 du projet \fIman\-pages\fP
Linux. Une description du projet et des instructions pour signaler des
anomalies peuvent être trouvées à l'adresse
\%http://www.kernel.org/doc/man\-pages/.
.SH TRADUCTION
Depuis 2010, cette traduction est maintenue à l'aide de l'outil
po4a <http://po4a.alioth.debian.org/> par l'équipe de
traduction francophone au sein du projet perkamon
<http://perkamon.alioth.debian.org/>.
.PP
Christophe Blaess <http://www.blaess.fr/christophe/> (1996-2003),
Alain Portal <http://manpagesfr.free.fr/> (2003-2006).
Nicolas François et l'équipe francophone de traduction de Debian\ (2006-2009).
.PP
Veuillez signaler toute erreur de traduction en écrivant à
<perkamon\-fr@traduc.org>.
.PP
Vous pouvez toujours avoir accès à la version anglaise de ce document en
utilisant la commande
«\ \fBLC_ALL=C\ man\fR \fI<section>\fR\ \fI<page_de_man>\fR\ ».
