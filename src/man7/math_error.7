.\" Copyright (c) 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH MATH_ERROR 7 "11 août 2008" Linux "Manuel du programmeur Linux"
.SH NOM
math_error \- Détecter des erreurs des fonctions mathématiques
.SH SYNOPSIS
.nf
\fB#include <math.h>\fP
\fB#include <errno.h>\fP
\fB#include <fenv.h>\fP
.fi
.SH DESCRIPTION
Quand une erreur se produit, la plupart des fonctions de bibliothèque
indique ceci en renvoyant une valeur spéciale (par exemple, \-1 ou
NULL). Parce qu'elles renvoient en général un nombre en virgule flottante,
les fonctions mathématiques déclarées dans \fI<math.h>\fP indique une
erreur en utilisant d'autres mécanismes. Il y a deux mécanismes d'indication
d'erreur\ : l'ancien configure \fIerrno\fP\ ; le nouveau utilise le mécanisme
d'exception de la virgule flottante (l'utilisation de \fBfeclearexcept\fP(3) et
\fBfetestexcept\fP(3), comme décrit ci\-dessous) décrit dans \fBfenv\fP(3).

Un programme portable qui doit vérifier les erreurs d'une fonction
mathématique devrait mettre \fIerrno\fP à zéro et effectuer l'appel suivant\ :
.in +4n
.nf

feclearexcept(FE_ALL_EXCEPT);

.fi
.in
avant d'appeler une fonction mathématique.

Après le retour d'une fonction mathématique, si \fIerrno\fP est non nul ou si
l'appel suivant (voir \fBfenv\fP(3)) ne renvoie pas zéro\ :
.in +4n
.nf

fetestexcept(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW |
             FE_UNDERFLOW);

.fi
.in
.\" enum
.\" {
.\" FE_INVALID = 0x01,
.\" __FE_DENORM = 0x02,
.\" FE_DIVBYZERO = 0x04,
.\" FE_OVERFLOW = 0x08,
.\" FE_UNDERFLOW = 0x10,
.\" FE_INEXACT = 0x20
.\" };
alors une erreur s'est produite dans la fonction mathématique.

Les conditions d'erreur qui peuvent se produire pour les fonctions
mathématiques sont décrites ci\-dessous.
.SS "Erreur de domaine"
Une \fIerreur de domaine\fP se produit quand une fonction mathématique reçoit
un paramètre dont la valeur se trouve en dehors du domaine de définition de
la fonction (par exemple, fournir un paramètre négatif à
\fBlog\fP(3)). Lorsqu'une erreur de domaine se produit, les fonctions renvoient
généralement un NaN (mais certaines fonctions renvoient une valeur
différente dans ce cas)\ ; \fIerrno\fP prend la valeur \fBEDOM\fP et une exception
de la virgule flottante «\ incorrecte\ » (\fBFE_INVALID\fP) est levée.
.SS "Erreur de pôle"
Une \fIerreur de pôle\fP se produit quand le résultat mathématique d'une
fonction est un infini (par exemple, le logarithme de 0 est l'infini
négatif). Quand une erreur de pôle se produit, la fonction renvoie la valeur
(signée) \fBHUGE_VAL\fP, \fBHUGE_VALF\fP ou \fBHUGE_VALL\fP suivant que la valeur de
retour de la fonction est un \fIdouble\fP, un \fIfloat\fP ou un \fIlong double\fP. Le
signe du résultat est celui du résultat correct de la fonction
mathématique. \fIerrno\fP prend la valeur \fBERANGE\fP et une exception de la
virgule flottante de division par zéro (\fBFE_DIVBYZERO\fP) est levée.
.SS "Erreur d'intervalle"
Une \fIerreur d'intervalle\fP se produit quand le module du résultat de la
fonction ne peut pas être représenté par le type utilisé pour le résultat de
la fonction. La valeur de retour de la fonction dépend suivant qu'il s'agit
d'un dépassement («\ overflow\ ») ou d'un souspassement («\ underflow\ »).

Un \fIdépassement\fP se produit pour le résultat flottant si le résultat est
fini, mais trop grand pour être représenté dans le type du résultat. Quand
un dépassement se produit, la fonction renvoie la valeur \fBHUGE_VAL\fP,
\fBHUGE_VALF\fP ou \fBHUGE_VALL\fP, suivant que le type de retour de la fonction
est un \fIdouble\fP, un \fIfloat\fP ou un \fIlong double\fP. \fIerrno\fP prend la valeur
\fBERANGE\fP et une exception de la virgule flottante de dépassement
(\fBFE_OVERFLOW\fP) est levée.

Un \fIsouspassement\fP («\ underflow\ ») se produit pour le résultat flottant si
le résultat est trop petit pour être représenté dans le type du
résultat. Quand un souspassement se produit, une fonction mathématique
renvoie généralement 0,0 (C99 indique qu'une fonction doit renvoyer «\ une
valeur propre à l'implémentation dont le module n'est pas plus grand que la
plus petite valeur normalisée positive du type donné\ »). \fIerrno\fP prend la
valeur  \fBERANGE\fP et une exception de la virgule flottante de souspassement
(\fBFE_UNDERFLOW\fP) peut être levée.

Certaines fonction produisent une erreur d'intervalle si la valeur du
paramètre fourni, ou le résultat exact de la fonction est \fIsubnormal\fP. Une
valeur subnormale est une valeur qui n'est pas nulle, mais dont le module
est si petit qu'il ne peut être représenté dans la forme normalisée
(c'est\-à\-dire avec un 1 dans le bit de poids fort de la mantisse). La
représentation d'un nombre subnormal contiendra un ou plusieurs zéro en tête
de la mantisse.
.SH NOTES
.\" See CONFORMANCE in the glibc 2.8 (and earlier) source.
L'identifiant \fImath_errhandling\fP spécifié par C99 et POSIX.1\-2001 n'est pas
pris en charge par la glibc. Cet identifiant est supposé indiquer lequel des
deux mécanismes d'indication d'erreur est utilisé (\fIerrno\fP ou des
exceptions récupérables avec \fBfettestexcept\fP(3)). Les normes imposent qu'au
moins l'un d'entre eux soit utilisé, mais autorisent à ce que les deux
soient disponibles. La situation actuelle de la glibc (version 2.8) n'est
pas très propre. La plupart des fonctions (mais pas toutes) lèvent des
exceptions en cas d'erreur. Certaines positionnent également
\fIerrno\fP. Quelques fonctions positionnent \fIerrno\fP, mais ne lèvent pas
d'exception. Très peu ne font ni l'un ni l'autre. Consulter les différentes
pages de manuel pour avoir les détails.

.\" http://www.securecoding.cert.org/confluence/display/seccode/FLP32-C.+Prevent+or+detect+domain+and+range+errors+in+math+functions
Pour éviter la complexité d'avoir à utiliser \fIerrno\fP et \fBfetestexcept\fP(3)
pour la détection d'erreurs, il est souvent recommandé de vérifier la
validité des paramètres avant les appels. Par exemple, le code suivant
s'assure que le paramètre de \fBlog\fP(3) n'est ni une NaN, ni zéro (une erreur
de pôle) ou inférieur à zéro (une erreur de domaine)\ :
.in +4n
.nf

double x, r;

if (isnan(x) || islessequal(x, 0)) {
    /* Deal with NaN / pole error / domain error */
}

r = log(x);

.fi
.in
La discussion sur cette page ne s'applique pas aux fonctions mathématiques à
variables complexes (c'est\-à\-dire celle déclarées par
\fI<complex.h>\fP), pour lesquelles C99 et POSIX.1\-2001 n'exigent pas
en général de renvoyer d'erreurs.

L'option de \fBgcc\fP(1) \fI\-fno\-math\-errno\fP permet d'utiliser des
implémentation de certaines fonctions mathématiques plus rapides que les
implémentation standard, mais qui ne positionnent pas \fIerrno\fP. (L'option
\fI\-ffast\-math\fP de \fBgcc\fP(1) active également \fI\-fno\-math\-errno\fP.) Une erreur
peut toujours être testée en utilisant \fBfetestexcept\fP(3).
.SH "VOIR AUSSI"
\fBgcc\fP(1), \fBerrno\fP(3), \fBfenv\fP(3), \fBfpclassify\fP(3), \fBINFINITY\fP(3),
\fBisgreater\fP(3), \fBmatherr\fP(3), \fBnan\fP(3)
.br
\fIinfo libc\fP
.SH COLOPHON
Cette page fait partie de la publication 3.23 du projet \fIman\-pages\fP
Linux. Une description du projet et des instructions pour signaler des
anomalies peuvent être trouvées à l'adresse
<URL:http://www.kernel.org/doc/man\-pages/>.
.SH TRADUCTION
Depuis 2010, cette traduction est maintenue à l'aide de l'outil
po4a <URL:http://po4a.alioth.debian.org/> par l'équipe de
traduction francophone au sein du projet perkamon
<URL:http://alioth.debian.org/projects/perkamon/>.
.PP
Alain Portal <URL:http://manpagesfr.free.fr/>\ (2008).
.PP
Veuillez signaler toute erreur de traduction en écrivant à
<perkamon\-l10n\-fr@lists.alioth.debian.org>.
.PP
Vous pouvez toujours avoir accès à la version anglaise de ce document en
utilisant la commande
«\ \fBLC_ALL=C\ man\fR \fI<section>\fR\ \fI<page_de_man>\fR\ ».
