.\" t
.\" Copyright (c) 2000 lars brinkhoff <lars@nocrew.org>
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.\" Modified, Thu Jan 27 19:16:19 CET 2000, lars@nocrew.org
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH DSP56K 4 "5 août 2012" Linux "Manuel du programmeur Linux"
.SH NOM
dsp56k \- Périphérique d'interface DSP\ 56001
.SH SYNOPSIS
.nf
#include <asm/dsp56k.h>
.sp
\fBssize_t read(int \fP\fIfd\fP\fB, void *\fP\fIdata\fP\fB, size_t \fP\fIlength\fP\fB);\fP
\fBssize_t write(int \fP\fIfd\fP\fB, void *\fP\fIdata\fP\fB, size_t \fP\fIlength\fP\fB);\fP

\fBint ioctl(int \fP\fIfd\fP\fB, DSP56K_UPLOAD, struct dsp56k_upload *\fP\fIprogram\fP\fB);\fP
\fBint ioctl(int \fP\fIfd\fP\fB, DSP56K_SET_TX_WSIZE, int \fP\fIwsize\fP\fB);\fP
\fBint ioctl(int \fP\fIfd\fP\fB, DSP56K_SET_RX_WSIZE, int \fP\fIwsize\fP\fB);\fP
\fBint ioctl(int \fP\fIfd\fP\fB, DSP56K_HOST_FLAGS, struct dsp56k_host_flags *\fP\fIflags\fP\fB);\fP
\fBint ioctl(int \fP\fIfd\fP\fB, DSP56K_HOST_CMD, int \fP\fIcmd\fP\fB);\fP
.fi
.SH CONFIGURATION
Le DSP\ 56001 est un périphérique caractère, ayant un numéro majeur valant
55 et un mineur 0.
.SH DESCRIPTION
Le DSP\ 56001 Motorola est un processeur de signal numérique 24 bits
entièrement programmable, que l'on trouve dans les ordinateurs compatibles
avec l'Atari Falcon 030. Le fichier spécial \fIdsp56k\fP sert à commander le
DSP\ 56001, pour envoyer ou recevoir des signaux sur le port hôte.
.PP
Pour envoyer un flux de signal vers le processeur, utilisez \fBwrite\fP(2) sur
le périphérique, et pour en recevoir, utilisez \fBread\fP(2). Les données
peuvent être émises ou reçues par blocs de 8, 16, 24 ou 32\ bits du côté
hôte, mais seront toujours vues comme des blocs de 24 bits du côté du DSP\ 56001.
.PP
Les appels \fBioctl\fP(2) suivants permettent de commander le périphérique
\fIdsp56k\fP\ :
.IP \fBDSP56K_UPLOAD\fP
Réinitialise le DSP\ 56001 et télécharge un programme. Le troisième
paramètre de l'appel \fBioctl\fP(2) doit être un pointeur sur une \fIstruct
dsp56k_binary\fP dont le champ \fIbin\fP pointe sur un programme DSP\ 56001
binaire. Le champ \fIlen\fP doit contenir la longueur du programme en mots de
24 bits.
.IP \fBDSP56K_SET_TX_WSIZE\fP
Configure la taille des mots émis. Les valeurs autorisées se trouvent dans
l'intervalle 1 à 4, correspondant au nombre d'octets envoyés à la fois. Ces
données seront soit complétées avec des zéros, soit tronquées pour s'aligner
sur le format natif 24 bits du DSP\ 56001.
.IP \fBDSP56K_SET_RX_WSIZE\fP
Configure la taille des mots reçus. Les valeurs autorisées se trouvent dans
l'intervalle 1 à 4, correspondant au nombre d'octets reçus en une fois. Ces
données seront soit complétées avec des zéros, soit tronquées pour s'aligner
sur le format natif 24 bits du DSP\ 56001.
.IP \fBDSP56K_HOST_FLAGS\fP
Lire ou écrire les attributs d'hôte. Ces attributs sont représentés par 4
bits à usage général qui peuvent être lus aussi bien par l'ordinateur hôte
que par le DSP\ 56001. Les bits 0 et 1 peuvent être écrits par l'hôte, et
les bits 2 et 3 peuvent être écrits par le DSP\ 56001.

Pour accéder aux attributs d'hôte, le troisième paramètre de l'appel
\fBioctl\fP(2) doit être un pointeur sur une \fIstruct dsp56k_host_flags\fP. Si
les bits 0 ou 1 sont à 1 dans le champ \fIdir\fP, le bit correspondant de
\fIout\fP sera écrit dans les attributs d'hôte. L'état des attributs d'hôte
sera renvoyé dans les quatre bits de poids faible du membre \fIstatus\fP.
.IP \fBDSP56K_HOST_CMD\fP
Envoie une commande d'hôte. Les valeurs autorisées sont dans l'intervalle 0
à 31 et correspondent à un numéro de commande (définie par l'utilisateur)
manipulé par le programme tournant sur le DSP\ 56001.
.SH FICHIERS
.\" .SH AUTHORS
.\" Fredrik Noring <noring@nocrew.org>, lars brinkhoff <lars@nocrew.org>,
.\" Tomas Berndtsson <tomas@nocrew.org>.
/dev/dsp56k
.SH "VOIR AUSSI"
\fIlinux/include/asm\-m68k/dsp56k.h\fP, \fIlinux/drivers/char/dsp56k.c\fP,
.UR http://dsp56k.nocrew.org/
.UE ,
DSP56000/DSP56001 Digital Signal
Processor User's Manual
.SH COLOPHON
Cette page fait partie de la publication 3.52 du projet \fIman\-pages\fP
Linux. Une description du projet et des instructions pour signaler des
anomalies peuvent être trouvées à l'adresse
\%http://www.kernel.org/doc/man\-pages/.
.SH TRADUCTION
Depuis 2010, cette traduction est maintenue à l'aide de l'outil
po4a <http://po4a.alioth.debian.org/> par l'équipe de
traduction francophone au sein du projet perkamon
<http://perkamon.alioth.debian.org/>.
.PP
Christophe Blaess <http://www.blaess.fr/christophe/> (1996-2003),
Alain Portal <http://manpagesfr.free.fr/> (2003-2006).
Simon Paillard et l'équipe francophone de traduction de Debian\ (2006-2009).
.PP
Veuillez signaler toute erreur de traduction en écrivant à
<perkamon\-fr@traduc.org>.
.PP
Vous pouvez toujours avoir accès à la version anglaise de ce document en
utilisant la commande
«\ \fBLC_ALL=C\ man\fR \fI<section>\fR\ \fI<page_de_man>\fR\ ».
